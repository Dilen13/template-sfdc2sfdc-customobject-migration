<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/stdio http://www.mulesoft.org/schema/mule/stdio/current/mule-stdio.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<batch:job name="migrateCustomObjectsBatch">
		<batch:threading-profile poolExhaustedAction="WAIT" />
		<batch:input>
			<sfdc:query config-ref="SalesforceA"
				query="dsql:SELECT Name, LastModifiedDate, interpreter__c, year__c FROM MusicAlbum__c WHERE year__c > 1968"
				doc:name="query CustomObjects from Salesforce instance A" fetchSize="${page.size}" />
		</batch:input>
		<batch:process-records>
			<batch:step name="getCustomObjectInBStep">
				<enricher source="#[payload]" target="#[recordVars['customObjectInB']]"
					doc:name="store result in record var 'customObjectInB'">
					<sfdc:query-single config-ref="SalesforceB"
						query="SELECT Id, Name, LastModifiedDate, interpreter__c, genre__c FROM MusicAlbum__c WHERE Name = '#[payload['Name']]'"
						doc:name="query customObject in Salesforce instance B" />
				</enricher>
				<expression-component doc:name="remove Id from CustomObject"><![CDATA[// Remove ID from object as it is not valid to create an object with a predefined ID
payload.remove('Id');]]></expression-component>
			</batch:step>
			<batch:step name="selectNewerCustomObjectStep"
				accept-expression="!(recordVars['customObjectInB'] is NullPayload)">
				<choice doc:name="Choice">
					<when
						expression="#[org.mule.templates.util.CustomObjectDateComparator.isAfter(payload, recordVars['customObjectInB'])]">
						<expression-component doc:name="define Id in SalesForce Intance B"><![CDATA[// Set ID to the one in target instance for update
payload.put('Id', recordVars['customObjectInB']['Id']);]]></expression-component>
					</when>
					<otherwise>
						<set-payload doc:name="set to null to skip this customObject"
							value="#[return null]" />
					</otherwise>
				</choice>
			</batch:step>
			<batch:step name="createCustomObjectsInBStep"
				accept-expression="!(payload is NullPayload)">
				<expression-component doc:name="remove fields type and LastModifiedDate and map custom fields"><![CDATA[payload.remove('type');
payload.remove('LastModifiedDate');

// TODO - Here you should remove all custom fields that don't exist in the target system and map the ones that vary in type/format
payload.remove('year__c');]]></expression-component>
				<logger message="CustomObject to create = #[payload]" level="ERROR"
					doc:name="log CustomObject to create" />
				<batch:commit size="200" doc:name="Batch Commit">
					<sfdc:upsert config-ref="SalesforceB" type="MusicAlbum__c"
						doc:name="upsert CustomObjects in org B" externalIdFieldName="Id">
						<sfdc:objects ref="#[payload]" />
					</sfdc:upsert>
				</batch:commit>
			</batch:step>
		</batch:process-records>
		<batch:on-complete>
			<all doc:name="All">
				<processor-chain>
					<json:object-to-json-transformer
						doc:name="transform BatchJobInstance to JSON" />
					<logger message="Migration process has finished: #[payload]"
						level="INFO" doc:name="log 'Migration process has finished'" />
				</processor-chain>
				<processor-chain>
					<json:object-to-json-transformer
						doc:name="transform BatchJobInstance to JSON" />
					<smtp:outbound-endpoint host="${smtp.host}"
						port="${smtp.port}" user="${smtp.user}" password="${smtp.password}"
						to="${mail.to}" from="${mail.from}" subject="${mail.subject}"
						responseTimeout="10000" connector-ref="gmailConnector" doc:name="send mail" />
				</processor-chain>
			</all>
		</batch:on-complete>
	</batch:job>
	<flow name="mainFlow" doc:name="mainFlow" processingStrategy="synchronous"
		doc:description="This flow is the entry point to the Template business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Template exposes to trigger it.

">
		<batch:execute name="migrateCustomObjectsBatch"
			doc:name="trigger migrateCustomObjectsBatch" />
		<exception-strategy ref="defaultChoiceExceptionStrategy"
			doc:name="catch Exception and call defaultChoiceExceptionStrategy" />
	</flow>


</mule>
